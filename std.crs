some = v. (Some, v);
none = None;

some = v. (Some, v);
none = None;

getSome = (Some, v). v;
getSome = None. none;

map = f.o. o == (Some, _) ? (Some, f (getSome o)) : none;

rec = n. n == 0 ? 0 : n + (rec n - 1);

compose = f.s.a. f(s a);

mapRec = map rec;

mapPrint = map print;

c = compose mapPrint mapRec;


option = t.
  | Map   : f.o. o <> (Some, v) ? option Some (f v) : None
  | Bind  : f.o. o <> (Some, v) ? f v : e
  | Some  : v. (Some, v)
  | None  : None
  | _     : NotRealized
;

either = t.
  | Map   : f.e. e <> (Right, v) ? either Right (f v) : e
  | Bind  : f.e. e <> (Right, v) ? f v : e
  | Left  : v. (Left v)
  | Right : v. (Right v)
  | _     : NotRealized
;
